version: '3.9'

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      args:
        - HTTP_PROXY=http://10.1.1.18:20171
        - HTTPS_PROXY=http://10.1.1.18:20171
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - http_proxy=http://10.1.1.18:20171
      - https_proxy=http://10.1.1.18:20171
      - no_proxy=localhost,127.0.0.1,10.1.1.17,10.1.1.18,10.1.1.101,10.1.1.218
    command: sleep infinity
    networks:
      - analytrace-network
    # depends_on:
    #   - backend

  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: ./Dockerfile
  #     args:
  #       - HTTP_PROXY=http://10.1.1.18:20171
  #       - HTTPS_PROXY=http://10.1.1.18:20171
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./backend:/app
  #     - ./certs/${P12_FILE_NAME}:/certs/${P12_FILE_NAME}
  #     - ./certs/${PUBLIC_KEY_FILE_NAME}:/certs/${PUBLIC_KEY_FILE_NAME}
  #   environment:
  #     - http_proxy=http://10.1.1.18:20171
  #     - https_proxy=http://10.1.1.18:20171
  #     - no_proxy=localhost,127.0.0.1,10.1.1.17,10.1.1.18,10.1.1.101,10.1.1.218,db,redis
  #     - DB_NAME=${DB_NAME}
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_HOST=${DB_HOST}
  #     - DB_PORT=${DB_PORT}
  #     - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
  #     - ELASTICSEARCH_PORT=${ELASTICSEARCH_PORT}
  #     - ELASTICSEARCH_SCHEME=${ELASTICSEARCH_SCHEME}
  #     - ELASTICSEARCH_USER=${ELASTICSEARCH_USER}
  #     - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
  #     - DATA_SOURCE_API_BASE_URL=${DATA_SOURCE_API_BASE_URL}
  #     - P12_FILE_PATH=/certs/${P12_FILE_NAME}
  #     - P12_PASSWORD=${P12_PASSWORD}
  #     - PUBLIC_KEY_PATH=/certs/${PUBLIC_KEY_FILE_NAME}
  #     - API_USERNAME=${API_USERNAME}
  #     - API_PASSWORD=${API_PASSWORD}
  #     - REDIRECT_BASE_URL=${REDIRECT_BASE_URL}
  #   env_file:
  #     - .env
  #   command: sleep infinity
  #   networks:
  #     - quantumeye-network
  #   depends_on:
  #     - db
  #     - redis

  # celery_worker:
  #   build:
  #     context: ./backend
  #     dockerfile: ./Dockerfile
  #     args:
  #       - HTTP_PROXY=http://10.1.1.18:20171
  #       - HTTPS_PROXY=http://10.1.1.18:20171
  #   volumes:
  #     - ./backend:/app
  #     - ./certs/${P12_FILE_NAME}:/certs/${P12_FILE_NAME}
  #     - ./certs/${PUBLIC_KEY_FILE_NAME}:/certs/${PUBLIC_KEY_FILE_NAME}
  #   environment:
  #     - http_proxy=http://10.1.1.18:20171
  #     - https_proxy=http://10.1.1.18:20171
  #     - no_proxy=localhost,127.0.0.1,10.1.1.17,10.1.1.18,10.1.1.101,10.1.1.218,db,redis
  #     - DB_NAME=${DB_NAME}
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_HOST=${DB_HOST}
  #     - DB_PORT=${DB_PORT}
  #     - DATA_SOURCE_API_BASE_URL=${DATA_SOURCE_API_BASE_URL}
  #     - P12_FILE_PATH=/certs/${P12_FILE_NAME}
  #     - P12_PASSWORD=${P12_PASSWORD}
  #     - PUBLIC_KEY_PATH=/certs/${PUBLIC_KEY_FILE_NAME}
  #     - API_USERNAME=${API_USERNAME}
  #     - API_PASSWORD=${API_PASSWORD}
  #   env_file:
  #     - .env
  #   # command: celery -A your_project_name worker -l info
  #   command: sleep infinity
  #   networks:
  #     - quantumeye-network
  #   depends_on:
  #     - backend
  #     - redis

  # celery_beat:
  #   build:
  #     context: ./backend
  #     dockerfile: ./Dockerfile
  #     args:
  #       - HTTP_PROXY=http://10.1.1.18:20171
  #       - HTTPS_PROXY=http://10.1.1.18:20171
  #   volumes:
  #     - ./backend:/app
  #   environment:
  #     - http_proxy=http://10.1.1.18:20171
  #     - https_proxy=http://10.1.1.18:20171
  #     - no_proxy=localhost,127.0.0.1,10.1.1.17,10.1.1.18,10.1.1.101,10.1.1.218,db,redis
  #     - DB_NAME=${DB_NAME}
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_HOST=${DB_HOST}
  #     - DB_PORT=${DB_PORT}
  #     - DATA_SOURCE_API_BASE_URL=${DATA_SOURCE_API_BASE_URL}
  #     - P12_FILE_PATH=/certs/${P12_FILE_NAME}
  #     - P12_PASSWORD=${P12_PASSWORD}
  #     - PUBLIC_KEY_PATH=/certs/${PUBLIC_KEY_FILE_NAME}
  #     - API_USERNAME=${API_USERNAME}
  #     - API_PASSWORD=${API_PASSWORD}
  #   env_file:
  #     - .env
  #   # command: celery -A your_project_name beat -l info
  #   command: sleep infinity
  #   networks:
  #     - quantumeye-network
  #   depends_on:
  #     - backend
  #     - redis

#   db:
#     image: mysql:8.0
#     command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#     ports:
#       - "33060:3306"
#     environment:
#       - MYSQL_DATABASE=${DB_NAME}
#       - MYSQL_USER=${DB_USER}
#       - MYSQL_PASSWORD=${DB_PASSWORD}
#       - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
#     volumes:
#       - mysql_data:/var/lib/mysql
#     env_file:
#       - .env
#     networks:
#       - quantumeye-network

#   redis:
#     image: redis:7.4-alpine
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis_data:/data
#     networks:
#       - quantumeye-network

# volumes:
#   mysql_data:
#   redis_data:

networks:
  analytrace-network:
    driver: bridge
